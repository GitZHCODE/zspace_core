digraph "zSpace::zVector::normalize"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node112 [label="zSpace::zVector::normalize",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This method normalizes the vector to unit length."];
  Node112 -> Node113 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node113 [label="zSpace::createPolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaf251bb68cd900abe02f923fa4f54686c",tooltip="This method creates the polytopal mesh based on the input volume mesh and its center line graph."];
  Node112 -> Node114 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 [label="zSpace::computeRulingIntersection",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaa5323f4fa138b179b6e1d7a49007cfa4",tooltip="This method computes the ruling intersetions."];
  Node114 -> Node115 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node115 [label="zSpace::closePolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gae190027ab219b334781def349d7b08fb",tooltip="This method closes the smooth polytopal mesh."];
  Node112 -> Node116 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="zSpace::explodePolytopal\lMeshes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga95e1d78109e8bfb9d144dc156dbb409a",tooltip="This method explodes the input volume meshes."];
  Node112 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="zSpace::updateFormGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga4e6850be5b5333e95b01d524d2a51d79",tooltip="This method updates the form diagram."];
  Node112 -> Node118 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="zSpace::zSlimeAgent\l::getF",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_slime_agent.html#a05418e088b707fe189cf8544c2310b01",tooltip="This method returns the forward direction for the agent."];
  Node112 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node119 [label="zSpace::zSlimeAgent\l::getFR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_slime_agent.html#ace23635415c5d643472f6bebec157ba2",tooltip="This method returns the forward right direction for the agent."];
  Node112 -> Node120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="zSpace::zSlimeAgent\l::getFL",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_slime_agent.html#a79ef55a80bfd78b14436e251f97ab5a4",tooltip="This method returns the forward left direction for the agent."];
  Node112 -> Node121 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="zSpace::zSlimeAgent\l::setVelocity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_slime_agent.html#a6a54fd438bcec1fadabdcfbf31335e81",tooltip="This method returns the direction for the agent based on input values of F, Fr and FL."];
  Node112 -> Node122 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="zSpace::extrudeConnection\lFaces",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#gab4c00e50a2b8f93f3b2d901d3c8a3055",tooltip=" "];
  Node122 -> Node123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="zSpace::createSpatialMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#ga33b7c2f2ce96ec2010fcf8980f4cbd50",tooltip="This method creates the polytopal mesh based on the input volume mesh and its center line graph."];
  Node112 -> Node123 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="zSpace::updateSpatialGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#ga1b949801964a52e7def70ec461cbd4d6",tooltip="This method updates the form diagram."];
  Node112 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="zSpace::createStreamGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#gad24d0e4376c42b67789e08cdf76085b6",tooltip="This method creates a single stream line as a graph."];
  Node125 -> Node126 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 [label="zSpace::createStreams",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0021c3f38461af2249546285b2a40c03",tooltip="This method creates the stream lines and stores them as a graph."];
  Node112 -> Node127 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="zSpace::getSeedPoints",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0e134353ee94a16509a6a41f8aef3d69",tooltip="This method computes the seed points."];
  Node127 -> Node126 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="zSpace::createStreamGraph\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0e2b7e6ec73859eb8291d10b826a64fc",tooltip="This method creates a single stream line as a graph."];
  Node128 -> Node129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node129 [label="zSpace::createStreams\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga6cbceb22b0a8b3764486c381db97fc22",tooltip="This method creates the stream lines and stores them as a graph."];
  Node112 -> Node130 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node130 [label="zSpace::getSeedPoints\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga3560060cde4350899a0dc5dc6368df2a",tooltip="This method computes the seed points."];
  Node130 -> Node129 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node131 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node131 [label="zSpace::variableFaceOffset\lExtrude",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga4b7753289e2df876a4577208825064e2",tooltip="This method offset extrudes the faces of the input mesh based on vertex / face color...."];
  Node112 -> Node132 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 [label="zSpace::variableBoundary\lOffset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga9c135fd7362c20a7c6eba655e7abc418",tooltip="This method offsets the boundary faces of the input mesh based on vertex color. It uses only the red ..."];
  Node112 -> Node133 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="zSpace::variableFaceThickness\lExtrude",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga8626c54d38eb699e9d79c88dadb9d417",tooltip="This method extrudes the input mesh based on vertex / face color. It uses only the red channel of the..."];
  Node112 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="zSpace::checkParallelity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#gac6feb95b39d4a9a1e184b1877a8cad26",tooltip="This method checks if the form mesh edges and corresponding force mesh edge are parallel."];
  Node112 -> Node135 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="zSpace::HorizontalEquilibrium\l_targets",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga996957da603ae17e1ba37e2a42840c3b",tooltip="This method computes the if the form mesh edges and corresponding force mesh edge are parallel."];
  Node112 -> Node136 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="zSpace::updateDiagramMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga583e27b88e6c766745031b0cd19cad0b",tooltip="This method updates the input diagram - form / force mesh."];
  Node136 -> Node137 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="zSpace::HorizontalEquilibrium",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga5a8d4aa06aab83a8f1da53e3ddbde0a3",tooltip="This method computes the horizontal equilibrium of the form and force mesh."];
  Node112 -> Node138 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="zSpace::zVector::angle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vector.html#acf4156a0599baccfab7d3ff64bf4c209",tooltip="This method returns the angle between the current zVector and input zVector."];
  Node138 -> Node134 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 -> Node139 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="zSpace::zGraph::cyclic\l_sortEdges",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#abe3788c9346ebecb3aaee6f1b538293a",tooltip="This method sorts edges cyclically around a given vertex using a bestfit plane."];
  Node138 -> Node141 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 [label="zSpace::getFaceTriangles",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga1d81b6e6cd06dd32b7795275da6a808c",tooltip="This method triangulates the input polygon using ear clipping algorithm."];
  Node112 -> Node154 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node154 [label="zSpace::zVector::dihedral\lAngle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vector.html#ad8817c8e347d109784cec18a3e35728c",tooltip="This method returns the dihedral angle between the two input zVectors using current zVector as edge r..."];
  Node154 -> Node155 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 [label="zSpace::getEdgeDihedralAngles",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gaf531920d8d86c1c508bec8c71d5d9954",tooltip="This method computes the dihedral angle per edge of zMesh."];
  Node112 -> Node157 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 [label="zSpace::zVector::rotateAboutAxis",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vector.html#a7c7172b9c4f20a7ff7f24cbe092b63a6",tooltip="This method returns the rotated vector of the current vector about an input axis by the the input ang..."];
  Node157 -> Node119 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 -> Node120 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 -> Node121 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 -> Node125 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 -> Node128 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node158 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="zSpace::line_PlaneIntersection",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vector_matrix_utilities.html#ga398dc6bba5cc5ca9eed7a45255548bf8",tooltip="This method returns the intersection of two lines which is point."];
  Node158 -> Node159 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node159 [label="zSpace::createFormGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaf287517e616400c266239e2aa3562b3e",tooltip="This method creates the center line graph based on the input volume meshes."];
  Node158 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node160 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node160 [label="zSpace::minDist_Edge\l_Point",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vector_matrix_utilities.html#gab0d76a80305185982ec89050ff322a3e",tooltip="This method computes the minimum distance between a point and edge and the closest Point on the edge."];
  Node160 -> Node161 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node161 [label="zSpace::assignScalarsAsEdge\lDistance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga9b9b7c2e08f35363c4e937cd3f8fccfb",tooltip="This method creates a edge distance Field from the input mesh."];
  Node112 -> Node162 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 [label="zSpace::minDist_Point\l_Plane",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vector_matrix_utilities.html#ga886bac496fea1d362bff79c577e6c593",tooltip="This method computes the minimum distance between a point and a plane."];
  Node162 -> Node117 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 -> Node124 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 -> Node163 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 [label="zSpace::addPlanarityForce",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_dynamics_utilities.html#ga73f915cb5cf41c4e515774d394fcd64f",tooltip="This method adds the planarity force to all the particles in the input container based on the face vo..."];
  Node112 -> Node164 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 [label="zSpace::getContourPosition",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga7b6e4a8f51dba83412e13209ab1f4193",tooltip="This method return the contour position given 2 input positions at the input field threshold."];
  Node164 -> Node165 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node165 [label="zSpace::getIsolinePoly",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#gaf7fddb03661f768390489b84311fe0c4",tooltip="This method gets the isoline polygon for the input mesh at the given input face index."];
  Node164 -> Node168 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node168 [label="zSpace::getIsobandPoly",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga1ca89389f4efa8797dbb5bc9497e2172",tooltip="This method gets the isoline polygon for the input mesh at the given input face index."];
  Node112 -> Node169 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node169 [label="zSpace::getIsocontour",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga6e47ed2966a60fe23fd026823eabac51",tooltip="This method creates a isocontour graph from the input field mesh at the given field threshold."];
  Node112 -> Node170 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 [label="zSpace::zMesh::computeVertex\lNormalfromFaceNormal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#ac27b3838590a838a11243e4fd6ad0b6d",tooltip="This method computes the vertex normals based on the face normals."];
  Node170 -> Node171 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node171 [label="zSpace::zMesh::computeMesh\lNormals",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#a42be75e01f9b3704fcc85fd745952b22",tooltip="This method computes the normals assoicated with vertices and polygon faces ."];
  Node171 -> Node174 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node174 [label="zSpace::collapseEdge",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga77533a4e95924fa8c030ba013eef1ec6",tooltip="This method collapses an edge into a vertex."];
  Node171 -> Node155 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node171 -> Node179 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node179 [label="zSpace::fromOBJ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_i_o___mesh.html#gad60778d5e70ebdcc0bd24babf3afa810",tooltip="This method imports zMesh from an OBJ file."];
  Node170 -> Node180 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node180 [label="zSpace::setFaceNormals",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga70201847356b120e967968c37670801f",tooltip="This method sets face normals of all the faces to the input normal."];
  Node180 -> Node179 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node171 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node174 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 -> Node144 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="zSpace::splitEdge",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gae7cb2380ed0e9717421bf19db5817cd6",tooltip="This method splits an edge and inserts a vertex along the edge at the input factor."];
  Node112 -> Node181 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node181 [label="zSpace::offsetMeshFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga33d47a47ed451d022be4b64b5865b0e1",tooltip="This method returns the offset positions of a polygon of the input mesh."];
  Node112 -> Node182 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node182 [label="zSpace::offsetMeshFace\l_Variable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga2d1e96823d5ddafb0c578999217416f5",tooltip="This method returns the vartiable offset positions of a polygon of the input mesh."];
  Node112 -> Node179 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
