digraph "zSpace::variableBoundaryOffset"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="zSpace::variableBoundary\lOffset",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This method offsets the boundary faces of the input mesh based on vertex color. It uses only the red ..."];
  Node0 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="zSpace::getCenters",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_graph_mesh_utilities.html#ga150a761e741dcc8e927aba87cc016de3",tooltip="This method computes the centers of a all edges or faces of a zGraph/zMesh."];
  Node0 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="zSpace::zMesh::onBoundary",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#aca5218f8a8b5c5f1cde25440d08c57d6",tooltip="This method determines if input zVertex or zEdge or zFace is on the boundary."];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="zSpace::zGraph::getConnected\lEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#ab623e9a3bfc70e1f140b911cb0645bd2",tooltip="This method gets the edges connected to input zVertex or zEdge."];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="zSpace::zVertex::getEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vertex.html#a7d187864963f642666b8c3bcfecee6e9",tooltip="This method returns the associated edge of current zVertex."];
  Node3 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="zSpace::zEdge::getEdgeId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_edge.html#acd6947ccba055fa6c31d6d386fe68e12",tooltip="This method returns the edgeId of current zEdge."];
  Node3 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="zSpace::zEdge::getPrev",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_edge.html#a01d9d153f7c5ec381474e815384f7d30",tooltip="This method returns the previous edge of current zEdge."];
  Node3 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="zSpace::zEdge::getSym",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_edge.html#a461679ac74cc371ad32e94092848f536",tooltip="This method returns the symmetry edge of current zEdge."];
  Node2 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="zSpace::zMesh::getEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#aa705d823873a948a1b62723f24a921b2",tooltip="This method gets the edges of a zFace."];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="zSpace::zFace::getEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_face.html#a69a14a515b179226aad1cbc3d7663163",tooltip="This method returns the associated edge of current zFace."];
  Node8 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="zSpace::zEdge::getNext",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_edge.html#a3bce594c06fc4450ce8af3c0b98e2ae3",tooltip="This method returns the next edge of current zEdge."];
  Node0 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="zSpace::ofMap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_core_utilities.html#ga772c31654e2dcf5f5ac0a884f3f9612a",tooltip="This method maps the input value from the input domain to output domain."];
  Node0 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="zSpace::zEdge::getVertex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_edge.html#a07c082aa54f78145fdcd5e5e4bb889f1",tooltip="This method returns the vertex pointed to by the current zEdge."];
  Node0 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="zSpace::zVertex::getVertexId",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vertex.html#ae6637ab378719b6c68c8237777fd065e",tooltip="This method returns the vertexId of current zVertex."];
  Node0 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="zSpace::zVector::normalize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vector.html#a27d075d5055bb92ddfe63fae4010339b",tooltip="This method normalizes the vector to unit length."];
  Node0 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="zSpace::zVector::length",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vector.html#aa3e1fd350f48b30428f95e716a4e3400",tooltip="This method returns the magnitude/length of the zVector."];
  Node0 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="zSpace::zMesh::getVertices",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#aa3010b8075e42f14efd4c3605085093b",tooltip="This method gets the vertices attached to input zEdge or zFace."];
  Node16 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="zSpace::setVertexColors",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_graph_utilities.html#ga38cf9f6374db02e2f273b07d31c73dfb",tooltip="This method sets vertex color of all the vertices with the input color contatiner."];
  Node17 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="zSpace::setEdgeColor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_graph_mesh_utilities.html#gaee6bfa4f8bd3051509412532bbd343dc",tooltip="This method sets edge color of of the input zGraph/zMesh edge and its symmetry edge to the input colo..."];
  Node17 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="zSpace::zGraph::computeEdge\lColorfromVertexColor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#a9d24b6ca7f58c16f1284671797267f21",tooltip="This method computes the Edge colors based on the vertex colors."];
  Node19 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
