digraph "zSpace::zEdge::getSym"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node360 [label="zSpace::zEdge::getSym",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This method returns the symmetry edge of current zEdge."];
  Node360 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node361 [label="zSpace::remeshSmoothPolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga5dd7e372cf8287c0434778b2e58d41f1",tooltip="This method remeshes the smoothed polytopal mesh to have rulings in ony one direction."];
  Node360 -> Node362 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node362 [label="zSpace::closePolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gae190027ab219b334781def349d7b08fb",tooltip="This method closes the smooth polytopal mesh."];
  Node360 -> Node363 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node363 [label="zSpace::getSeedPoints",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0e134353ee94a16509a6a41f8aef3d69",tooltip="This method computes the seed points."];
  Node363 -> Node364 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node364 [label="zSpace::createStreams",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0021c3f38461af2249546285b2a40c03",tooltip="This method creates the stream lines and stores them as a graph."];
  Node360 -> Node365 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node365 [label="zSpace::getSeedPoints\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga3560060cde4350899a0dc5dc6368df2a",tooltip="This method computes the seed points."];
  Node365 -> Node366 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node366 [label="zSpace::createStreams\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga6cbceb22b0a8b3764486c381db97fc22",tooltip="This method creates the stream lines and stores them as a graph."];
  Node360 -> Node367 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node367 [label="zSpace::variableBoundary\lOffset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga9c135fd7362c20a7c6eba655e7abc418",tooltip="This method offsets the boundary faces of the input mesh based on vertex color. It uses only the red ..."];
  Node360 -> Node368 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node368 [label="zSpace::createForceMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga25c838cdc81a084a1fffacb95da267a3",tooltip="This method computes the force mesh based on the thrust netwrok analysis."];
  Node360 -> Node369 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node369 [label="zSpace::checkParallelity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#gac6feb95b39d4a9a1e184b1877a8cad26",tooltip="This method checks if the form mesh edges and corresponding force mesh edge are parallel."];
  Node360 -> Node370 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node370 [label="zSpace::HorizontalEquilibrium\l_targets",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga996957da603ae17e1ba37e2a42840c3b",tooltip="This method computes the if the form mesh edges and corresponding force mesh edge are parallel."];
  Node360 -> Node371 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node371 [label="zSpace::updateDiagramMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga583e27b88e6c766745031b0cd19cad0b",tooltip="This method updates the input diagram - form / force mesh."];
  Node371 -> Node372 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node372 [label="zSpace::HorizontalEquilibrium",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga5a8d4aa06aab83a8f1da53e3ddbde0a3",tooltip="This method computes the horizontal equilibrium of the form and force mesh."];
  Node360 -> Node373 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node373 [label="zSpace::printGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_print_utilities.html#ga96cf7a290a07af957dbe1740993c721d",tooltip="This method prints graph data to the console."];
  Node360 -> Node374 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node374 [label="zSpace::printMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_print_utilities.html#ga24820d178bfefb22bc7bf22a3945bb6f",tooltip="This method prints mesh data to the console."];
  Node360 -> Node375 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node375 [label="zSpace::assignScalarsAsEdge\lDistance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga9b9b7c2e08f35363c4e937cd3f8fccfb",tooltip="This method creates a edge distance Field from the input mesh."];
  Node360 -> Node376 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node376 [label="zSpace::zEdge::removeEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_edge.html#a5395c85714f3d04fb4e673d335982655",tooltip="This method makes the pointer of the current and symmetry zEdge to null."];
  Node376 -> Node377 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node377 [label="zSpace::zMesh::deactivate\lElement",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#aea35829fdb54f511f93cef10c85da66c",tooltip="This method deactivates the input elements from the array connected with the input type."];
  Node377 -> Node378 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node378 [label="zSpace::zMesh::maintainManifold\lTopology",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#ae66609043bee62d706443ac5dc47304f",tooltip="This method cleans up the mesh to maintain manifolod topology."];
  Node377 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node379 [label="zSpace::deleteVertex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga20644ac4933b8ae055b0eb47a9df8420",tooltip="This method deletes the mesh vertex given by the input vertex index."];
  Node377 -> Node380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node380 [label="zSpace::deleteFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga24ab0fcd418ba91e387838fdc4711787",tooltip="This method deletes the mesh face given by the input face index."];
  Node377 -> Node381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node381 [label="zSpace::collapseEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga77533a4e95924fa8c030ba013eef1ec6",tooltip="This method collapses an edge into a vertex."];
  Node381 -> Node382 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node382 [label="zSpace::collapseShortEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga14350e97740cec4f835125fb286fc071",tooltip="This method collapses an edge shorter than the given minimum edge length value if the collapsing does..."];
  Node360 -> Node383 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node383 [label="zSpace::zGraph::zGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#a7a53b68f1efa596293b85259464cf3ff",tooltip="Overloaded constructor."];
  Node360 -> Node384 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 [label="zSpace::zGraph::getConnected\lEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#ab623e9a3bfc70e1f140b911cb0645bd2",tooltip="This method gets the edges connected to input zVertex or zEdge."];
  Node384 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node385 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node385 [label="zSpace::computeRulingIntersection",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaa5323f4fa138b179b6e1d7a49007cfa4",tooltip="This method computes the ruling intersetions."];
  Node385 -> Node362 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node362 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node386 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node386 [label="zSpace::computeFormGraph\l_EdgeWeights",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga99afc82e0233ac5ab8729972e84b4d31",tooltip="This method computes the form graph edge weights based on the force volume mesh face areas."];
  Node384 -> Node387 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node387 [label="zSpace::updateFormGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga4e6850be5b5333e95b01d524d2a51d79",tooltip="This method updates the form diagram."];
  Node384 -> Node388 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node388 [label="zSpace::updateSpatialGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#ga1b949801964a52e7def70ec461cbd4d6",tooltip="This method updates the form diagram."];
  Node384 -> Node367 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node368 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node371 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node389 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node389 [label="zSpace::zGraph::getConnected\lVertices",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#a75a017ecad7ec54a9fdc207b163a0972",tooltip="This method gets the vertices connected to input zVertex."];
  Node389 -> Node387 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node389 -> Node388 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node389 -> Node382 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node395 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node395 [label="zSpace::zGraph::getVertex\lValence",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#aa5b1403b1a2992d1c8a39f76dea393e3",tooltip="This method calculate the valency of the input zVertex."];
  Node395 -> Node381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node400 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node400 [label="zSpace::zGraph::computeVertex\lColorfromEdgeColor",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#a654f5d383500ccf87c9c7f87bc8301c4",tooltip="This method computes the vertex colors based on the face colors."];
  Node384 -> Node403 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node403 [label="zSpace::zGraph::removeInactive\lElements",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#afdd947e992fda2487ef6a5a3487d9e6b",tooltip="This method removes inactive elements from the array connected with the input type."];
  Node403 -> Node404 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node404 [label="zSpace::toTXT",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_i_o___graph.html#ga6578d361dabd565a48e2093a80e6f8b6",tooltip="This method exports zGraph to a TXT file format."];
  Node403 -> Node405 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node405 [label="zSpace::toJSON",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_i_o___graph.html#gac49cfef1063731952f6decc21775c747",tooltip="This method exports zGraph to a JSON file format using JSON Modern Library."];
  Node384 -> Node406 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node406 [label="zSpace::zMesh::getConnected\lFaces",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#af37006a17bd4e6945860281a4cbef861",tooltip="This method gets the faces connected to input zVertex or zFace."];
  Node406 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node406 -> Node424 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node424 [label="zSpace::smoothMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga41f9be96453c21ac7b33b2991c284775",tooltip="This method applies Catmull-Clark subdivision to the mesh."];
  Node424 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node436 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 [label="zSpace::zMesh::onBoundary",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#aca5218f8a8b5c5f1cde25440d08c57d6",tooltip="This method determines if input zVertex or zEdge or zFace is on the boundary."];
  Node436 -> Node361 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 -> Node385 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 -> Node367 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 -> Node380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 -> Node381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 -> Node424 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 -> Node439 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node439 [label="zSpace::getEdgeLoopLength",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gab72b7e4a3c80733252896a6813c131e9",tooltip="This method computes the edge length of the edge loop starting at the input edge of zMesh."];
  Node384 -> Node377 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node441 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node441 [label="zSpace::zMesh::removeInactive\lElements",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#ab21d59eecb169921b427a7e766d47aa5",tooltip="This method removes inactive elements from the array connected with the input type."];
  Node441 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node441 -> Node380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node441 -> Node381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node441 -> Node442 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node442 [label="zSpace::toOBJ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_i_o___mesh.html#ga56d1123fee7864f1a5da2f740b9e589d",tooltip="This method exports zMesh as an OBJ file."];
  Node441 -> Node443 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node443 [label="zSpace::toJSON",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_i_o___mesh.html#ga6fccda275363a86353d2750673122d6f",tooltip="This method exports zMesh to a JSON file format using JSON Modern Library."];
  Node384 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node424 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node384 -> Node444 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node444 [label="zSpace::getVertexArea",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gad8b0ab5019853bb7e4851014310554d0",tooltip="This method computes the area around every vertex of a mesh based on face centers."];
  Node360 -> Node403 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node445 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node445 [label="zSpace::zMesh::update\l_BoundaryEdgePointers",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#a736b8e4019610612f4cab40094c36e06",tooltip="This method updates the pointers for boundary Edges."];
  Node445 -> Node418 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node418 [label="zSpace::zMesh::zMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#a127de8a508706826cc4a537ad7a1cc9c",tooltip="Overloaded constructor."];
  Node445 -> Node379 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node377 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node441 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node380 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node381 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node421 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node421 [label="zSpace::splitEdge",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gae7cb2380ed0e9717421bf19db5817cd6",tooltip="This method splits an edge and inserts a vertex along the edge at the input factor."];
  Node421 -> Node422 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node422 [label="zSpace::splitFaces",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gaeda022d590a10b38c94e75bc0e278d80",tooltip="This method splits a set of edges and faces of a mesh in a continuous manner."];
  Node421 -> Node423 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node423 [label="zSpace::subdivideMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga8c3af5dd0f40d6f82fd23ceead47dc64",tooltip="This method subdivides all the faces and edges of the mesh."];
  Node421 -> Node424 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node446 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node446 [label="zSpace::flipTriangleEdge",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga23b04bfa34f16159cbc2b1c5e1116f39",tooltip="This method flips the edge shared bettwen two rainglua faces."];
  Node360 -> Node422 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node423 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node424 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node439 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node444 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node360 -> Node447 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node447 [label="zSpace::offsetMeshFace\l_Variable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga2d1e96823d5ddafb0c578999217416f5",tooltip="This method returns the vartiable offset positions of a polygon of the input mesh."];
}
