digraph "zSpace::zVector::length"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node60 [label="zSpace::zVector::length",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This method returns the magnitude/length of the zVector."];
  Node60 -> Node61 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="zSpace::createPolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaf251bb68cd900abe02f923fa4f54686c",tooltip="This method creates the polytopal mesh based on the input volume mesh and its center line graph."];
  Node60 -> Node62 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="zSpace::computeRulingIntersection",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaa5323f4fa138b179b6e1d7a49007cfa4",tooltip="This method computes the ruling intersetions."];
  Node62 -> Node63 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="zSpace::closePolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gae190027ab219b334781def349d7b08fb",tooltip="This method closes the smooth polytopal mesh."];
  Node60 -> Node64 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="zSpace::explodePolytopal\lMeshes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga95e1d78109e8bfb9d144dc156dbb409a",tooltip="This method explodes the input volume meshes."];
  Node60 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="zSpace::updateFormGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga4e6850be5b5333e95b01d524d2a51d79",tooltip="This method updates the form diagram."];
  Node60 -> Node66 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="zSpace::extrudeConnection\lFaces",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#gab4c00e50a2b8f93f3b2d901d3c8a3055",tooltip=" "];
  Node66 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="zSpace::createSpatialMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#ga33b7c2f2ce96ec2010fcf8980f4cbd50",tooltip="This method creates the polytopal mesh based on the input volume mesh and its center line graph."];
  Node60 -> Node67 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="zSpace::updateSpatialGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#ga1b949801964a52e7def70ec461cbd4d6",tooltip="This method updates the form diagram."];
  Node60 -> Node69 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="zSpace::createStreamGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#gad24d0e4376c42b67789e08cdf76085b6",tooltip="This method creates a single stream line as a graph."];
  Node69 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="zSpace::createStreams",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0021c3f38461af2249546285b2a40c03",tooltip="This method creates the stream lines and stores them as a graph."];
  Node60 -> Node71 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="zSpace::getSeedPoints",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0e134353ee94a16509a6a41f8aef3d69",tooltip="This method computes the seed points."];
  Node71 -> Node70 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 -> Node72 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="zSpace::createStreamGraph\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga0e2b7e6ec73859eb8291d10b826a64fc",tooltip="This method creates a single stream line as a graph."];
  Node72 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node73 [label="zSpace::createStreams\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga6cbceb22b0a8b3764486c381db97fc22",tooltip="This method creates the stream lines and stores them as a graph."];
  Node60 -> Node74 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node74 [label="zSpace::getSeedPoints\l_Influence",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_stream_lines2_d.html#ga3560060cde4350899a0dc5dc6368df2a",tooltip="This method computes the seed points."];
  Node74 -> Node73 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 -> Node75 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node75 [label="zSpace::variableFaceOffset\lExtrude",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga4b7753289e2df876a4577208825064e2",tooltip="This method offset extrudes the faces of the input mesh based on vertex / face color...."];
  Node60 -> Node76 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node76 [label="zSpace::variableBoundary\lOffset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga9c135fd7362c20a7c6eba655e7abc418",tooltip="This method offsets the boundary faces of the input mesh based on vertex color. It uses only the red ..."];
  Node60 -> Node77 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node77 [label="zSpace::updateDiagramMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga583e27b88e6c766745031b0cd19cad0b",tooltip="This method updates the input diagram - form / force mesh."];
  Node77 -> Node78 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node78 [label="zSpace::HorizontalEquilibrium",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#ga5a8d4aa06aab83a8f1da53e3ddbde0a3",tooltip="This method computes the horizontal equilibrium of the form and force mesh."];
  Node60 -> Node79 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node79 [label="zSpace::zVector::angle",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_vector.html#acf4156a0599baccfab7d3ff64bf4c209",tooltip="This method returns the angle between the current zVector and input zVector."];
  Node79 -> Node80 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node80 [label="zSpace::checkParallelity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vault___t_n_a.html#gac6feb95b39d4a9a1e184b1877a8cad26",tooltip="This method checks if the form mesh edges and corresponding force mesh edge are parallel."];
  Node79 -> Node81 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node81 [label="zSpace::zGraph::cyclic\l_sortEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#abe3788c9346ebecb3aaee6f1b538293a",tooltip="This method sorts edges cyclically around a given vertex using a bestfit plane."];
  Node81 -> Node82 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node82 [label="zSpace::zGraph::zGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_graph.html#a7a53b68f1efa596293b85259464cf3ff",tooltip="Overloaded constructor."];
  Node79 -> Node83 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node83 [label="zSpace::getFaceTriangles",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga1d81b6e6cd06dd32b7795275da6a808c",tooltip="This method triangulates the input polygon using ear clipping algorithm."];
  Node83 -> Node84 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node84 [label="zSpace::faceTriangulate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga436ab6f006de6e8dcd08c030fed4feb1",tooltip="This method triangulates the input face of the mesh."];
  Node84 -> Node85 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node85 [label="zSpace::triangulate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga75ee8f140a3311506a932b866523a1de",tooltip="This method triangulates the input mesh."];
  Node84 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node86 [label="zSpace::splitEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gae7cb2380ed0e9717421bf19db5817cd6",tooltip="This method splits an edge and inserts a vertex along the edge at the input factor."];
  Node86 -> Node87 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node87 [label="zSpace::splitFaces",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gaeda022d590a10b38c94e75bc0e278d80",tooltip="This method splits a set of edges and faces of a mesh in a continuous manner."];
  Node86 -> Node88 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node88 [label="zSpace::subdivideMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga8c3af5dd0f40d6f82fd23ceead47dc64",tooltip="This method subdivides all the faces and edges of the mesh."];
  Node86 -> Node89 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 [label="zSpace::smoothMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga41f9be96453c21ac7b33b2991c284775",tooltip="This method applies Catmull-Clark subdivision to the mesh."];
  Node89 -> Node90 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="zSpace::remeshSmoothPolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga5dd7e372cf8287c0434778b2e58d41f1",tooltip="This method remeshes the smoothed polytopal mesh to have rulings in ony one direction."];
  Node86 -> Node91 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="zSpace::splitLongEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gad707c82ae843ee9aa108c078161881ca",tooltip="This method splits an edge longer than the given input value at its midpoint and triangulates the mes..."];
  Node83 -> Node92 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="zSpace::getMeshTriangles",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gaff7f65ebfe08571efb90aee41286f19f",tooltip="This method computes the triangles of each face of the input mesh and stored in 2 dimensional contain..."];
  Node92 -> Node93 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="zSpace::getMeshVolume",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga1e3e701cfec716ba62a8eed64a532531",tooltip="This method computes the volume of the input mesh."];
  Node92 -> Node94 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="zSpace::getMeshFaceVolume",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gab9dcf47533903c7745cf029d4808830a",tooltip="This method computes the volume of the polyhedras formed by the face vertices and the face center of ..."];
  Node60 -> Node96 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="zSpace::line_PlaneIntersection",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_vector_matrix_utilities.html#ga398dc6bba5cc5ca9eed7a45255548bf8",tooltip="This method returns the intersection of two lines which is point."];
  Node96 -> Node97 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="zSpace::createFormGraph",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaf287517e616400c266239e2aa3562b3e",tooltip="This method creates the center line graph based on the input volume meshes."];
  Node96 -> Node65 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 -> Node68 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 -> Node98 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="zSpace::createScalarField\lFromVectorField",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga7913ca4cedb8a049b845b8f7d417a545",tooltip="This method creates a scalar field from the input vector field."];
  Node60 -> Node99 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="zSpace::clipwithPlane",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga88c4618ac754f6fffab5d2ab00021ffc",tooltip="This method uses an input plane to clip an existing scalar field."];
  Node60 -> Node100 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="zSpace::getContourPosition",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga7b6e4a8f51dba83412e13209ab1f4193",tooltip="This method return the contour position given 2 input positions at the input field threshold."];
  Node100 -> Node101 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="zSpace::getIsolinePoly",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#gaf7fddb03661f768390489b84311fe0c4",tooltip="This method gets the isoline polygon for the input mesh at the given input face index."];
  Node101 -> Node102 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="zSpace::getIsolineMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga63d805729d97ddd318cf0700a234b469",tooltip="This method creates a isoline mesh from the input field mesh at the given field threshold."];
  Node102 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="zSpace::getIsobandMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga45610f4909d8d9800db09f245dc8ba8a",tooltip="This method creates a isoband mesh from the input field mesh at the given field threshold."];
  Node100 -> Node104 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="zSpace::getIsobandPoly",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga1ca89389f4efa8797dbb5bc9497e2172",tooltip="This method gets the isoline polygon for the input mesh at the given input face index."];
  Node104 -> Node103 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 -> Node105 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="zSpace::getIsocontour",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga6e47ed2966a60fe23fd026823eabac51",tooltip="This method creates a isocontour graph from the input field mesh at the given field threshold."];
  Node60 -> Node106 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="zSpace::collapseEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga77533a4e95924fa8c030ba013eef1ec6",tooltip="This method collapses an edge into a vertex."];
  Node106 -> Node107 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="zSpace::collapseShortEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga14350e97740cec4f835125fb286fc071",tooltip="This method collapses an edge shorter than the given minimum edge length value if the collapsing does..."];
  Node60 -> Node86 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 -> Node108 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="zSpace::getPrincipalCurvature",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga1e60d7d324e3a491f9e60060fa3258e2",tooltip="This method computes the local curvature of the mesh vertices."];
  Node60 -> Node109 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="zSpace::offsetMeshFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga33d47a47ed451d022be4b64b5865b0e1",tooltip="This method returns the offset positions of a polygon of the input mesh."];
  Node60 -> Node110 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="zSpace::offsetMeshFace\l_Variable",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga2d1e96823d5ddafb0c578999217416f5",tooltip="This method returns the vartiable offset positions of a polygon of the input mesh."];
}
