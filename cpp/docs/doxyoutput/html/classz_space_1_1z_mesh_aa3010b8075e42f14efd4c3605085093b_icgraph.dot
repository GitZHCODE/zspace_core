digraph "zSpace::zMesh::getVertices"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="RL";
  Node411 [label="zSpace::zMesh::getVertices",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This method gets the vertices attached to input zEdge or zFace."];
  Node411 -> Node412 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node412 [label="zSpace::createPolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#gaf251bb68cd900abe02f923fa4f54686c",tooltip="This method creates the polytopal mesh based on the input volume mesh and its center line graph."];
  Node411 -> Node413 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node413 [label="zSpace::extrudeConnection\lFaces",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#gab4c00e50a2b8f93f3b2d901d3c8a3055",tooltip=" "];
  Node413 -> Node414 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node414 [label="zSpace::createSpatialMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_spatial_structure.html#ga33b7c2f2ce96ec2010fcf8980f4cbd50",tooltip="This method creates the polytopal mesh based on the input volume mesh and its center line graph."];
  Node411 -> Node415 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node415 [label="zSpace::variableFaceOffset\lExtrude",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga4b7753289e2df876a4577208825064e2",tooltip="This method offset extrudes the faces of the input mesh based on vertex / face color...."];
  Node411 -> Node416 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node416 [label="zSpace::variableBoundary\lOffset",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga9c135fd7362c20a7c6eba655e7abc418",tooltip="This method offsets the boundary faces of the input mesh based on vertex color. It uses only the red ..."];
  Node411 -> Node417 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node417 [label="zSpace::variableFaceThickness\lExtrude",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_variable_extrude.html#ga8626c54d38eb699e9d79c88dadb9d417",tooltip="This method extrudes the input mesh based on vertex / face color. It uses only the red channel of the..."];
  Node411 -> Node418 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node418 [label="zSpace::zBufferObject\l::appendMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_buffer_object.html#ac5e8e4b2d6a21dbf4e59ed55a8b8bc58",tooltip="This method appends zMesh to the buffer."];
  Node411 -> Node419 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node419 [label="zSpace::drawMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_display_utilities.html#ga90f9bbfff5e1d7e80e48a0ceeba46508",tooltip="This method displays the zMesh."];
  Node411 -> Node420 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node420 [label="zSpace::addPlanarityForce",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_dynamics_utilities.html#ga73f915cb5cf41c4e515774d394fcd64f",tooltip="This method adds the planarity force to all the particles in the input container based on the face vo..."];
  Node411 -> Node421 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node421 [label="zSpace::updateFieldValues",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga7317fef387a758a3c687d6b511252172",tooltip="This method updates the color values of the field mesh based on the scalar values...."];
  Node411 -> Node422 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node422 [label="zSpace::getIsolinePoly",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#gaf7fddb03661f768390489b84311fe0c4",tooltip="This method gets the isoline polygon for the input mesh at the given input face index."];
  Node422 -> Node423 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node423 [label="zSpace::getIsolineMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga63d805729d97ddd318cf0700a234b469",tooltip="This method creates a isoline mesh from the input field mesh at the given field threshold."];
  Node423 -> Node424 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node424 [label="zSpace::getIsobandMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga45610f4909d8d9800db09f245dc8ba8a",tooltip="This method creates a isoband mesh from the input field mesh at the given field threshold."];
  Node411 -> Node425 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node425 [label="zSpace::getIsobandPoly",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga1ca89389f4efa8797dbb5bc9497e2172",tooltip="This method gets the isoline polygon for the input mesh at the given input face index."];
  Node425 -> Node424 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node426 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node426 [label="zSpace::zMesh::getVertex\lPositions",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#acb04a75607dbcc07efd4709ecd1cb2db",tooltip="This method gets the vertex positions attached to input zEdge or zFace."];
  Node426 -> Node413 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node426 -> Node415 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node426 -> Node420 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node427 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node427 [label="zSpace::zMesh::computeFace\lColorfromVertexColor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#a89641aad9a7a872cef9eb34ccff09269",tooltip="This method computes the face colors based on the vertex colors."];
  Node427 -> Node428 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node428 [label="zSpace::assignScalarsAsVertex\lDistance",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_field2_d_utilities.html#ga6fcca173932ddf0922fd415c2afb8feb",tooltip="This method creates a vertex distance Field from the input vector of zVector positions."];
  Node427 -> Node429 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node429 [label="zSpace::setVertexColor",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga350a2d9332ce16b822a5169320a789a9",tooltip="This method sets vertex color of all the vertices to the input color."];
  Node427 -> Node430 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node430 [label="zSpace::setVertexColors",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga7eea2e4cbed233677f01622bbb290ba7",tooltip="This method sets vertex color of all the vertices with the input color contatiner."];
  Node411 -> Node431 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node431 [label="zSpace::zMesh::computeMesh\lNormals",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#a42be75e01f9b3704fcc85fd745952b22",tooltip="This method computes the normals assoicated with vertices and polygon faces ."];
  Node431 -> Node432 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node432 [label="zSpace::zMesh::zMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classz_space_1_1z_mesh.html#a127de8a508706826cc4a537ad7a1cc9c",tooltip="Overloaded constructor."];
  Node431 -> Node433 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node433 [label="zSpace::faceTriangulate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga436ab6f006de6e8dcd08c030fed4feb1",tooltip="This method triangulates the input face of the mesh."];
  Node433 -> Node434 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node434 [label="zSpace::triangulate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga75ee8f140a3311506a932b866523a1de",tooltip="This method triangulates the input mesh."];
  Node433 -> Node435 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node435 [label="zSpace::splitEdge",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gae7cb2380ed0e9717421bf19db5817cd6",tooltip="This method splits an edge and inserts a vertex along the edge at the input factor."];
  Node435 -> Node436 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node436 [label="zSpace::splitFaces",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#gaeda022d590a10b38c94e75bc0e278d80",tooltip="This method splits a set of edges and faces of a mesh in a continuous manner."];
  Node435 -> Node437 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node437 [label="zSpace::subdivideMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga8c3af5dd0f40d6f82fd23ceead47dc64",tooltip="This method subdivides all the faces and edges of the mesh."];
  Node435 -> Node438 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node438 [label="zSpace::smoothMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga41f9be96453c21ac7b33b2991c284775",tooltip="This method applies Catmull-Clark subdivision to the mesh."];
  Node438 -> Node439 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node439 [label="zSpace::remeshSmoothPolytopalMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga5dd7e372cf8287c0434778b2e58d41f1",tooltip="This method remeshes the smoothed polytopal mesh to have rulings in ony one direction."];
  Node431 -> Node434 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node431 -> Node441 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node441 [label="zSpace::deleteVertex",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga20644ac4933b8ae055b0eb47a9df8420",tooltip="This method deletes the mesh vertex given by the input vertex index."];
  Node431 -> Node442 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node442 [label="zSpace::collapseEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga77533a4e95924fa8c030ba013eef1ec6",tooltip="This method collapses an edge into a vertex."];
  Node442 -> Node443 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node443 [label="zSpace::collapseShortEdges",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga14350e97740cec4f835125fb286fc071",tooltip="This method collapses an edge shorter than the given minimum edge length value if the collapsing does..."];
  Node431 -> Node437 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node431 -> Node438 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node431 -> Node444 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node444 [label="zSpace::extrudeMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga6f2ce938aa8bb72d5b4649115d76d9c8",tooltip="This method returns an extruded mesh from the input mesh."];
  Node431 -> Node445 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node445 [label="zSpace::getMeshTriangles",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gaff7f65ebfe08571efb90aee41286f19f",tooltip="This method computes the triangles of each face of the input mesh and stored in 2 dimensional contain..."];
  Node445 -> Node446 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node446 [label="zSpace::getMeshVolume",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga1e3e701cfec716ba62a8eed64a532531",tooltip="This method computes the volume of the input mesh."];
  Node445 -> Node447 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node447 [label="zSpace::getMeshFaceVolume",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gab9dcf47533903c7745cf029d4808830a",tooltip="This method computes the volume of the polyhedras formed by the face vertices and the face center of ..."];
  Node447 -> Node448 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node448 [label="zSpace::getMeshFaceVolumes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gaec25d42556bd5880326704ba3d53d38b",tooltip="This method computes the volume of the polyhedras formed by the face vertices and the face center for..."];
  Node445 -> Node448 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node431 -> Node449 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node449 [label="zSpace::getEdgeDihedralAngles",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gaf531920d8d86c1c508bec8c71d5d9954",tooltip="This method computes the dihedral angle per edge of zMesh."];
  Node449 -> Node418 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node431 -> Node450 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node450 [label="zSpace::getPlanarFaceAreas",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#gaa37b5055021194293cbbba94644cd2d8",tooltip="This method computes the area of every face of the mesh. It works only for if the faces are planar."];
  Node450 -> Node451 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node451 [label="zSpace::computeFormGraph\l_EdgeWeights",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_polytopal.html#ga99afc82e0233ac5ab8729972e84b4d31",tooltip="This method computes the form graph edge weights based on the force volume mesh face areas."];
  Node431 -> Node452 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node452 [label="zSpace::fromOBJ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_i_o___mesh.html#gad60778d5e70ebdcc0bd24babf3afa810",tooltip="This method imports zMesh from an OBJ file."];
  Node411 -> Node433 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node453 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node453 [label="zSpace::deleteFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga24ab0fcd418ba91e387838fdc4711787",tooltip="This method deletes the mesh face given by the input face index."];
  Node411 -> Node454 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node454 [label="zSpace::flipTriangleEdge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga23b04bfa34f16159cbc2b1c5e1116f39",tooltip="This method flips the edge shared bettwen two rainglua faces."];
  Node454 -> Node455 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node455 [label="zSpace::equalizeValences",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_modifiers.html#ga50d27f458f57c4f90fa9242b05ded2d2",tooltip="This method equalizes the vertex valences by flipping edges of the input triangulated mesh...."];
  Node411 -> Node437 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node438 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node444 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node455 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node456 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node456 [label="zSpace::getFaceTriangles",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga1d81b6e6cd06dd32b7795275da6a808c",tooltip="This method triangulates the input polygon using ear clipping algorithm."];
  Node456 -> Node433 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node456 -> Node445 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node445 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node447 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node450 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node411 -> Node457 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node457 [label="zSpace::computePolyConnects\l_PolyCount",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga1311698c2fce00e59bcfafcbfb29a29e",tooltip="This method stores input mesh connectivity information in the input containers."];
  Node457 -> Node458 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node458 [label="zSpace::duplicateMesh",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga12077c6309605a6ceb8b9bcc714b4b31",tooltip="This method creates a duplicate of the input mesh."];
  Node457 -> Node460 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node460 [label="zSpace::combineDisjointMesh",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga4db96d817f6d701261569fd42594ea8b",tooltip="This method combines the two disjoint meshes to one mesh."];
  Node411 -> Node461 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node461 [label="zSpace::offsetMeshFace",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_mesh_utilities.html#ga33d47a47ed451d022be4b64b5865b0e1",tooltip="This method returns the offset positions of a polygon of the input mesh."];
  Node411 -> Node462 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node462 [label="zSpace::toOBJ",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__z_i_o___mesh.html#ga56d1123fee7864f1a5da2f740b9e589d",tooltip="This method exports zMesh as an OBJ file."];
}
